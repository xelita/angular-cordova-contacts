var cordovaContactsModule=angular.module("cordovaContactsModule",[]);cordovaContactsModule.constant("cordovaContactsConstants",{apiVersion:"1.0.0",cordovaVersion:">=3.4.0"});cordovaContactsModule.factory("cordovaContactsService",["$rootScope","$log","cordovaContactsConstants",function(e,t,n){return{apiVersion:function(){t.debug("cordovaContactsService.apiVersion.");return n.apiVersion},cordovaVersion:function(){t.debug("cordovaContactsService.cordovaVersion.");return n.cordovaVersion},checkContactsAvailability:function(){t.debug("cordovaContactsService.checkContactsAvailability.");if(!navigator.contacts){t.warn("Contacts API is not available.");return false}return true},create:function(e){t.debug("cordovaContactsService.create.");if(!this.checkContactsAvailability()){return null}return navigator.contacts.create(e)},find:function(n,r,i,s){t.debug("cordovaContactsService.find.");if(!this.checkContactsAvailability()){return}navigator.contacts.find(n,function(t){e.$apply(r(t))},function(t){e.$apply(i(t))},s)},save:function(n,r,i){t.debug("cordovaContactsService.save.");if(!this.checkContactsAvailability()){return}n.save(function(t){e.$apply(r(t))},function(t){e.$apply(i(t))})},remove:function(n,r,i){t.debug("cordovaContactsService.remove.");if(!this.checkContactsAvailability()){return}n.remove(function(){e.$apply(r())},function(t){e.$apply(i(t))})},clone:function(e){t.debug("cordovaContactsService.clone.");if(!this.checkContactsAvailability()){return null}return e.clone()}}}])